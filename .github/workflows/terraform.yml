name: Terraform

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        description: 'Please select terraform action [plan/apply/destroy] ! Warning all action with -auto-approve !'
        required: true
        default: plan
        type: choice
        options:
        - plan
        - apply
        # - destroy
      # destroy_confirmation:
      #   description: 'Type "Yes, I want to destroy them all." to confirm destruction !'
      #   required: false
      #   default: 'No, keep them forever.'

permissions:
  id-token: write

jobs:
  terraform:
    name: 'Terraform env:dev'
    runs-on: ubuntu-latest
    environment: dev
    env:
      TF_WORKSPACE: dev
      ARM_USE_MSI: true
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Load environment variable
    # - name: Load environment variables from env file
    #   run: cat env-${{ env.TF_WORKSPACE }}/${{ env.TF_WORKSPACE }}.env | grep -v ^# >> $GITHUB_ENV

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Log in with Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # - name: Generates SAS Token
    #   run: utilities/get_sas_azurerm.sh

    - name: Terraform Init
      run: |
        terraform init -backend-config="env-${{ env.TF_WORKSPACE }}/${{ env.TF_WORKSPACE }}.azurerm.tfbackend"

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      if: github.event.inputs.terraform_action == 'plan'
      run: terraform plan

    - name: Terraform Apply
      if: github.event.inputs.terraform_action == 'apply'
      run: terraform apply -auto-approve